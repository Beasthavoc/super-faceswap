version: '3.8'

services:
  face-swap-super:
    build:
      context: .
      dockerfile: Dockerfile
    image: tjmance/face-swap-super:latest
    container_name: face-swap-super
    ports:
      - "7860:7860"  # Gradio web interface
    volumes:
      - ./models:/app/models
      - ./assets:/app/assets
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0"
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    depends_on:
      - redis
      - model-cache
    networks:
      - face-swap-network

  redis:
    image: redis:7-alpine
    container_name: face-swap-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - face-swap-network

  model-cache:
    image: nginx:alpine
    container_name: face-swap-model-cache
    volumes:
      - ./models:/usr/share/nginx/html/models:ro
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - face-swap-network

  # Optional: Database for storing processing history
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: face-swap-db
  #   environment:
  #     POSTGRES_DB: faceswap
  #     POSTGRES_USER: faceswap
  #     POSTGRES_PASSWORD: faceswap_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - face-swap-network

  # Optional: Monitoring with Prometheus
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: face-swap-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   restart: unless-stopped
  #   networks:
  #     - face-swap-network

  # Optional: Grafana for visualization
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: face-swap-grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   restart: unless-stopped
  #   networks:
  #     - face-swap-network

volumes:
  redis_data:
  # postgres_data:
  # grafana_data:

networks:
  face-swap-network:
    driver: bridge